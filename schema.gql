# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Book {
  author: String!
  createdAt: DateTime!
  genres: JSON!
  id: String!
  rating: Int!
  title: String!
  updatedAt: DateTime!
  year: Int!
}

type BookHistory {
  archivedAt: DateTime!
  author: String!
  createdAt: DateTime!
  genres: JSON!
  id: String!
  rating: Int!
  title: String!
  updatedAt: DateTime!
  year: Int!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  bookAdd(author: String!, genres: String!, rating: Int!, title: String!, year: Int!): Book!
  bookEdit(author: String!, genres: String!, id: String!, rating: Int!, title: String!, year: Int!): Book!
  bookRemove(id: String!): Boolean!
  userSignIn(email: String!, password: String!): Token!
  userSignUp(email: String!, password: String!): Token!
}

type Query {
  bookFindByAuthor(author: String!): [Book!]!
  bookFindByTitle(title: String!): [Book!]!
  bookFindByTitleOrAuthor(titleOrAuthor: String!): [Book!]!
  bookHistory(id: String!): [BookHistory!]!
  user: User!
  userFind(email: String!): User!
}

type Token {
  token: String!
}

type User {
  createdAt: DateTime!
  email: String!
  updatedAt: DateTime!
}
